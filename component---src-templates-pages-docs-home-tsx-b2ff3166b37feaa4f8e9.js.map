{"version":3,"sources":["webpack:///./src/components/QuickJump.tsx","webpack:///./src/components/display/GreyButton.tsx","webpack:///./src/components/display/ButtonGrid.tsx","webpack:///./src/templates/pages/docs/home.tsx"],"names":["QuickJump","props","intl","useIntl","releaseURL","createInternational","withPrefix","releaseInfo","releaseNotesURL","betaURL","undefined","isBeta","betaPostURL","isRC","rcPostURL","IntlLink","createIntlLink","lang","allSitePage","className","style","textAlign","title","to","marginTop","href","tags","betaMajMin","stableMajMin","GreyButton","startsWith","classes","headline","push","first","last","key","join","blurb","ButtonGrid","buttons","map","b","Index","i","description","pageContext","data","badge","query","Intl","locale"],"mappings":"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","file":"component---src-templates-pages-docs-home-tsx-b2ff3166b37feaa4f8e9.js","sourcesContent":["import * as React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { createInternational } from \"../lib/createInternational\";\nimport { docCopy } from \"../copy/en/documentation\";\nimport { AllSitePage, createIntlLink } from \"./IntlLink\";\n\n// Automatic metadata from npm and VS Marketplace\nimport releaseInfo from \"../lib/release-info.json\";\nimport { withPrefix } from \"gatsby\";\n\nexport type Props = {\n  title: string;\n  allSitePage: AllSitePage;\n  lang: string;\n};\nexport const QuickJump = (props: Props) => {\n  const intl = useIntl();\n  const i = createInternational<typeof docCopy>(intl);\n  i;\n\n  const releaseURL = withPrefix(releaseInfo.releaseNotesURL);\n  let betaURL: string | undefined = undefined;\n  if (releaseInfo.isBeta) betaURL = releaseInfo.betaPostURL;\n  if (releaseInfo.isRC) betaURL = releaseInfo.rcPostURL;\n\n  const IntlLink = createIntlLink(props.lang, props.allSitePage);\n\n  return <div className=\"main-content-block\">\n    <h2 style={{ textAlign: \"center\" }}>{props.title}</h2>\n    <div className=\"columns\">\n      <div className=\"item raised\">\n        <h4>Get Started</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes.html\">\n              JS to TS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-from-scratch.html\">\n              New to Programming\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes-oop.html\">\n              OOP to JS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes-func.html\">\n              Functional to JS\n            </IntlLink>\n          </li>\n          <li><IntlLink to=\"/download\">Installation</IntlLink></li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Handbook</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/basic-types.html\">\n              Basic Types\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/advanced-types.html\">\n              Advanced Types\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/interfaces.html\">\n              Interfaces\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/variable-declarations.html\">\n              Variable Declarations\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/functions.html\">Functions</IntlLink>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Tools</h4>\n        <ul>\n          <li><IntlLink to=\"/play/\">Playground</IntlLink></li>\n          <li><IntlLink to=\"/tsconfig/\">TSConfig Reference</IntlLink></li>\n        </ul>\n        <h4 style={{ marginTop: \"28px\" }}>Release Notes</h4>\n        <ul>\n          {betaURL\n            ? <li>\n              <a href={betaURL}>\n                What's upcoming in {releaseInfo.tags.betaMajMin}?\n              </a>\n            </li>\n            : null}\n          <li>\n            <IntlLink to={releaseURL}>\n              What's new in {releaseInfo.tags.stableMajMin}\n            </IntlLink>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Tutorials</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/asp-net-core.html\">ASP.NET</IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/migrating-from-javascript.html\">\n              Migrating from JS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/dom-manipulation.html\">\n              Working with the DOM\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/react-&-webpack.html\">\n              React &amp; Webpack\n            </IntlLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>;\n};\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\n\nexport type Props = {\n  href: string\n  blurb: string\n  title: string\n  headline?: true\n  badge?: string\n  first?: boolean\n  last?: boolean\n}\n\n/** A pretty grey button */\nexport const GreyButton = (props: Props) => {\n  const href = props.href.startsWith(\"http\") ? props.href : withPrefix(props.href)\n  const classes = [\"clicky-grey-button\"]\n\n  if (props.headline) classes.push(\"headline\")\n  if (props.first) classes.push(\"first\")\n  if (props.last) classes.push(\"last\")\n\n  return <a key={props.title} href={href} className={classes.join(\" \")}>\n    <p>{props.blurb}</p>\n    <h4>{props.title}</h4>\n  </a>\n}\n","import * as React from \"react\"\nimport { GreyButton } from \"./GreyButton\"\n\ntype ButtonProps = Omit<import(\"./GreyButton\").Props, \"headline\">\nexport type GridProps = {\n  buttons: ButtonProps[]\n  headline?: true\n}\n\n\n/** A pretty grid of grey buttons */\nexport const ButtonGrid = (props: GridProps) => (\n  <div className=\"flow-links\">\n    {props.buttons.map(b =>\n      <GreyButton {...b} headline={props.headline} key={b.href} />\n    )}\n  </div>\n)\n","import * as React from \"react\";\nimport { Layout } from \"../../../components/layout\";\n\nimport \"../css/documentation.scss\";\nimport { ButtonGrid } from \"../../../components/display/ButtonGrid\";\nimport { Intl } from \"../../../components/Intl\";\n\nimport { docCopy } from \"../../../copy/en/documentation\";\nimport { createInternational } from \"../../../lib/createInternational\";\nimport { useIntl } from \"react-intl\";\nimport { graphql } from \"gatsby\";\nimport { DocsHomeQuery } from \"../../../__generated__/gatsby-types\";\nimport { QuickJump } from \"../../../components/QuickJump\";\n\ntype Props = {\n  data: DocsHomeQuery;\n  pageContext: any;\n};\n\nconst Index: React.FC<Props> = (props) => {\n  const i = createInternational<typeof docCopy>(useIntl());\n  return (\n    <Layout\n      title={i(\"doc_layout_title\")}\n      description={i(\"doc_layout_description\")}\n      lang={props.pageContext.lang}\n      allSitePage={props.data.allSitePage}\n    >\n      <QuickJump\n        title={i(\"doc_headline\")}\n        allSitePage={props.data.allSitePage}\n        lang={props.pageContext.lang}\n      />\n\n      <div className=\"raised main-content-block\">\n        <h1>{i(\"doc_start_a_project\")}</h1>\n        <p>{i(\"doc_start_a_project_desc\")}</p>\n\n        <h2>{i(\"doc_node_npm\")}</h2>\n        <ButtonGrid\n          buttons={[\n            {\n              href: \"https://github.com/jaredpalmer/tsdx#readme\",\n              blurb: i(\"doc_node_npm_tsdx_blurb\"),\n              title: \"TSDX\",\n            },\n            {\n              href: \"https://oclif.io\",\n              blurb: i(\"doc_node_npm_oclif_blurb\"),\n              title: \"oclif\",\n            },\n            {\n              href: \"https://github.com/infinitered/gluegun#readme\",\n              blurb: i(\"doc_node_npm_gluegun_blurb\"),\n              title: \"Gluegun\",\n            },\n          ]}\n        />\n\n        <h2>{i(\"doc_frameworks\")}</h2>\n        <ButtonGrid\n          buttons={[\n            {\n              href: \"https://angular.io\",\n              blurb: i(\"doc_frameworks_angular_blurb\"),\n              title: \"Angular\",\n            },\n            {\n              href: \"https://ember-cli-typescript.com\",\n              blurb: i(\"doc_frameworks_ember_blurb\"),\n              title: \"Ember\",\n            },\n            {\n              href: \"https://reactjs.org\",\n              badge: \"Examples below\",\n              blurb: i(\"doc_frameworks_react_blurb\"),\n              title: \"React\",\n            },\n            {\n              href: \"https://vuejs.org\",\n              blurb: i(\"doc_frameworks_vue_blurb\"),\n              title: \"Vue\",\n            },\n            {\n              href:\n                \"https://github.com/rails/webpacker/blob/master/docs/typescript.md\",\n              badge: \"Plugin\",\n              blurb: i(\"doc_frameworks_ror_blurb\"),\n              title: \"Ruby on Rails\",\n            },\n            {\n              href:\n                \"https://www.typescriptlang.org/docs/handbook/asp-net-core.html\",\n              badge: \"Guide\",\n              blurb: i(\"doc_frameworks_asp_blurb\"),\n              title: \"ASP.NET Core\",\n            },\n          ]}\n        />\n\n        <h2>{i(\"doc_apis\")}</h2>\n        <ButtonGrid\n          buttons={[\n            {\n              href:\n                \"https://code.visualstudio.com/tutorials/functions-extension/getting-started\",\n              blurb: i(\"doc_apis_azure_blurb\"),\n              title: \"Azure Functions\",\n            },\n            {\n              href: \"https://feathersjs.com\",\n              blurb: i(\"doc_apis_feather_blurb\"),\n              title: \"Feathers JS\",\n            },\n            {\n              href:\n                \"https://github.com/graphql-boilerplates/typescript-graphql-server\",\n              blurb: i(\"doc_apis_graphql_blurb\"),\n              title: \"GraphQL\",\n            },\n            {\n              href: \"https://nestjs.com\",\n              blurb: i(\"doc_apis_nest_blurb\"),\n              title: \"Nest JS\",\n            },\n            {\n              href: \"https://github.com/Microsoft/TypeScript-Node-Starter\",\n              blurb: i(\"doc_apis_node_blurb\"),\n              title: \"Node Reference\",\n            },\n            {\n              href:\n                \"https://github.com/microsoft/TypeScript-WeChat-Starter/blob/master/README.md\",\n              badge: \"Guide\",\n              blurb: i(\"doc_apis_wechat_blurb\"),\n              title: \"WeChat\",\n            },\n            {\n              href: \"https://loopback.io\",\n              blurb: i(\"doc_apis_loopback_blurb\"),\n              title: \"LoopBack\",\n            },\n            {\n              href: \"https://www.fastify.io/\",\n              blurb: i(\"doc_apis_fastify_blurb\"),\n              title: \"Fastify\",\n            },\n          ]}\n        />\n\n        <h2>{i(\"doc_react\")}</h2>\n        <ButtonGrid\n          buttons={[\n            {\n              href: \"https://create-react-app.dev\",\n              blurb: i(\"doc_react_create_blurb\"),\n              title: \"Create React App\",\n            },\n            {\n              href: \"https://www.gatsbyjs.org\",\n              badge: \"Plugin\",\n              blurb: i(\"doc_react_gatsby_blurb\"),\n              title: \"Gatsby\",\n            },\n            {\n              href: \"https://nextjs.org\",\n              blurb: i(\"doc_react_next_blurb\"),\n              title: \"Next.js\",\n            },\n            {\n              href: \"https://github.com/jaredpalmer/razzle\",\n              blurb: i(\"doc_react_razzle_blurb\"),\n              title: \"Razzle\",\n            },\n            {\n              href:\n                \"https://reactjs.org/docs/create-a-new-react-app.html#recommended-toolchains\",\n              blurb: i(\"doc_react_toolchains_blurb\"),\n              title: i(\"doc_react_toolchains_title\"),\n            },\n          ]}\n        />\n\n        <h2>{i(\"doc_apps\")}</h2>\n        <ButtonGrid\n          buttons={[\n            {\n              href: \"https://babeljs.io/docs/en/babel-preset-typescript\",\n              badge: \"Plugin\",\n              blurb: i(\"doc_apps_electron_blurb\"),\n              title: \"Electron\",\n            },\n            {\n              href: \"https://expo.io/\",\n              blurb: i(\"doc_apps_expo_blurb\"),\n              title: \"Expo\",\n            },\n            {\n              href: \"https://facebook.github.io/react-native/\",\n              blurb: i(\"doc_apps_react_native_blurb\"),\n              title: \"React Native\",\n            },\n            {\n              href: \"https://www.nativescript.org/\",\n              blurb: i(\"doc_apps_native_script_blurb\"),\n              title: \"NativeScript\",\n            },\n            {\n              href: \"https://www.microsoft.com/en-us/makecode/\",\n              blurb: i(\"doc_apps_make_code_blurb\"),\n              title: \"MakeCode\",\n            },\n          ]}\n        />\n\n        <h2>{i(\"doc_tooling\")}</h2>\n        <ButtonGrid\n          buttons={[\n            {\n              href: \"https://babeljs.io/docs/en/babel-preset-typescript\",\n              badge: \"Plugin\",\n              blurb: i(\"doc_tooling_babel_blurb\"),\n              title: \"Babel\",\n            },\n            {\n              href: \"https://parceljs.org\",\n              blurb: i(\"doc_tooling_parcel_blurb\"),\n              title: \"Parcel\",\n            },\n            {\n              href: \"https://webpack.js.org/guides/typescript/\",\n              badge: \"Plugin\",\n              blurb: i(\"doc_tooling_webpack_blurb\"),\n              title: \"Webpack\",\n            },\n          ]}\n        />\n\n        <h1>{i(\"doc_learn\")}</h1>\n        <ButtonGrid\n          buttons={[\n            {\n              href: \"/docs/handbook/release-notes/typescript-3-8.html\",\n              blurb: i(\"doc_learn_3_5_release_notes_title\"),\n              title: i(\"doc_learn_3_5_release_notes_title\"),\n            },\n            {\n              href: \"/docs/handbook/basic-types.html\",\n              blurb: i(\"doc_headline_handbook_blurb\"),\n              title: \"Handbook\",\n            },\n            {\n              href: \"/docs/handbook/declaration-files/introduction.html\",\n              blurb: i(\"doc_learn_d_ts_blurb\"),\n              title: i(\"doc_learn_d_ts_title\"),\n            },\n            {\n              href: \"/play/\",\n              blurb: i(\"doc_learn_playground_blurb\"),\n              title: i(\"play_subnav_title\" as any),\n            },\n          ]}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query DocsHome {\n    ...AllSitePage\n  }\n`;\n\nexport default (props: Props) => (\n  <Intl locale={props.pageContext.lang}>\n    <Index {...props} />\n  </Intl>\n);\n"],"sourceRoot":""}